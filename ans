Here are the steps to accomplish the tasks you've outlined in Python:

1. Set the variable test1 to the string 'This is a test of the emergency text system,' and save test1 to a file named test.txt.

```python
test1 = 'This is a test of the emergency text system,'
with open('test.txt', 'w') as file:
    file.write(test1)
```

2. Read the contents of the file test.txt into the variable test2. Is there a difference between test1 and test2?

```python
with open('test.txt', 'r') as file:
    test2 = file.read()

# Check if there's a difference between test1 and test2
if test1 == test2:
    print("test1 and test2 are the same.")
else:
    print("test1 and test2 are different.")
```

3. Create a CSV file called books.csv with the provided content:

```python
import csv

csv_content = [
    ['title', 'author', 'year'],
    ['The Weirdstone of Brisingamen', 'Alan Garner', 1960],
    ['Perdido Street Station', 'China Mi√©ville', 2000],
    ['Thud!', 'Terry Pratchett', 2005],
    ['The Spellman Files', 'Lisa Lutz', 2007],
    ['Small Gods', 'Terry Pratchett', 1992]
]

with open('books.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerows(csv_content)
```

4. Use the sqlite3 module to create a SQLite database called books.db and a table called books with these fields: title (text), author (text), and year (integer).

```python
import sqlite3

# Create the SQLite database and the 'books' table
conn = sqlite3.connect('books.db')
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS books (
        title TEXT,
        author TEXT,
        year INTEGER
    )
''')
conn.commit()
conn.close()
```

5. Read books.csv and insert its data into the book table.

```python
import csv

# Read data from books.csv and insert it into the 'books' table
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

with open('books.csv', 'r') as file:
    csv_reader = csv.reader(file)
    next(csv_reader)  # Skip the header row
    for row in csv_reader:
        cursor.execute('INSERT INTO books VALUES (?, ?, ?)', row)

conn.commit()
conn.close()
```

6. Select and print the title column from the book table in alphabetical order.

```python
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

cursor.execute('SELECT title FROM books ORDER BY title ASC')
titles = cursor.fetchall()

for title in titles:
    print(title[0])

conn.close()
```

7. From the book table, select and print all columns in the order of publication.

```python
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

cursor.execute('SELECT * FROM books ORDER BY year ASC')
books = cursor.fetchall()

for book in books:
    print(book)

conn.close()
```

8. Use the sqlalchemy module to connect to the sqlite3 database books.db.

```python
from sqlalchemy import create_engine

# Connect to the SQLite database using SQLAlchemy
engine = create_engine('sqlite:///books.db')
```

9. Install the Redis server and the Python redis library (pip install redis) on your computer. Create a Redis hash called test with the fields count (1) and name ('Fester Bestertester'). Print all the fields for test.

```python
import redis

# Connect to the Redis server
r = redis.Redis(host='localhost', port=6379, db=0)

# Create a Redis hash
r.hmset('test', {'count': 1, 'name': 'Fester Bestertester'})

# Print all fields for 'test'
print(r.hgetall('test'))
```

10. Increment the count field of test and print it.

```python
# Increment the 'count' field by 1
r.hincrby('test', 'count', 1)

# Print the updated value of 'count'
print(r.hget('test', 'count'))
```

Make sure you have Redis installed and running on your local machine for task #9 and #10 to work.
